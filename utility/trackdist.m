function [d,xyproj] = trackdist(xy,xytr,iorig,llorxy);% [d,xyproj] = trackdist(xy,xytr);%                            ..., iorig);%                                   ..., 'll' | 'xy');%% interpolates distances along the track _xytr_ for the points _xy_.% handles points off the ends of the track okay.% coords are given like [x1 y1; x2 y2; ...].% Uses xytr(iorig,:) as the origin. Default is 1.% if last argument is 'll', interprets as lat-long coords in degrees. Default% is 'll'.% d is distances in km.% xyproj is a vector of points projected along the track.%% algorithm:% for a point in xy (x0,y0) and a segment of xytr (x1,y1)-(x2,y2),% define an index along the segment which is 0 at (x1,y1) and 1 at (x2,y2).% the value of the index that minimizes dist^2 from (x0,y0) to the line is% 		p = ((x2-x1)(x0-x1)+(y2-y1)(y0-y1))/((x2-x1)^2+(y2-y1)^2).% if p is between 0 and 1, the point of closest approach to that segment can% be interpolated; if p < 0, it's (x1,y1); if p > 1, it's (x2,y2). Call this% point (xhat,yhat); calculate the distance from (x0,y0) to this point on each% segment. Now just find the minimum for the whole track, and find the cumsum% distance along the track up to the appropriate (xhat,yhat).% if the overall point of closest approach is the 1st or last point on the% track, then adds or subtracts linear dist to that endpoint (as if (x0,y0) were an% additional track point).%% neil banas 2002if nargin == 3	if isstr(iorig), llorxy = iorig; iorig = 1; else, llorxy = 'll'; endelseif nargin == 2	iorig = 1; llorxy = 'll';endif size(xy,1)==2 & size(xy,2)~=2, xy = xy'; endif size(xytr,1)==2 & size(xytr,2)~=2, xytr = xytr'; endif strcmpi(llorxy,'ll')	llorig = mean(xytr);	xy = ll2cart(xy,llorig);	xytr = ll2cart(xytr,llorig);enddx = diff(xytr(:,1));	% these are vectors the length of the # of segmentsdy = diff(xytr(:,2));	% in xytrD2dxdy = dx.^2+dy.^2;Dseg = sqrt(D2dxdy);x1 = xytr(1:end-1,1);y1 = xytr(1:end-1,2);x2 = xytr(2:end,1);y2 = xytr(2:end,2);for i = 1:size(xy,1)	% for each (x0,y0)	p = (dx.*(xy(i,1)-x1)+dy.*(xy(i,2)-y1))./D2dxdy;	p(find(p<0)) = 0;	p(find(p>1)) = 1;	xhat = (1-p).*x1+p.*x2;	% point of closest approach on each seg	yhat = (1-p).*y1+p.*y2;	D2 = (xhat-xy(i,1)).^2+(yhat-xy(i,2)).^2;	% min dist for each seg	f = find(D2==min(D2)); % best seg	f = f(1);	dist(i) = sum(Dseg(1:f-1)) + p(f).*Dseg(f);	%cumulative dist along track	xyproj(i,:) = [xhat(f) yhat(f)];	if f==1 & p(f)==0	% if before the start of the track		dist(i) = dist(i) - sqrt((xy(i,1)-xytr(1,1)).^2+(xy(i,2)-xytr(1,2)).^2);		xyproj(i,:) = xy(i,:);	elseif f==length(Dseg) & p(f)==1	% if after the end of the track		dist(i) = dist(i) + sqrt((xy(i,1)-xytr(end,1)).^2+(xy(i,2)-xytr(end,2)).^2);		xyproj(i,:) = xy(i,:);	endendd = dist - sum(Dseg(1:iorig-1));	% subtract off distance to assigned origin pointif strcmpi(llorxy,'ll')	xyproj = cart2ll(xyproj,llorig);end